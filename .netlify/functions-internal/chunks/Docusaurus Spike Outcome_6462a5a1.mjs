import { f as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro_c5329516.mjs';
import 'clsx';

const html = "<p>==================</p>\n<p><strong>Spike:</strong> Spike_No</p>\n<p><strong>Title:</strong> Docusaurus Recommendation</p>\n<p><strong>Author:</strong> Quinn Curtis, <a href=\"mailto:xcurtis@deakin.edu.au\">xcurtis@deakin.edu.au</a></p>\n<h2 id=\"goals--deliverables\">Goals / Deliverables</h2>\n<p>The goal of this report was to determine if Docusaurus was a good option for Thoth Tech, and deliver\na spike with the answer</p>\n<h2 id=\"technologies-tools-and-resources-used\">Technologies, Tools, and Resources used</h2>\n<ul>\n<li>Internet Browser (only tested with firefox and chrome)</li>\n<li>NodeJS</li>\n<li>Text Editor: VsCode</li>\n<li>Terminal: Windows terminal</li>\n<li>Programming Languages:\n<ul>\n<li>JavaScript</li>\n<li>TypeScript</li>\n<li>React</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"tasks-undertaken\">Tasks undertaken</h2>\n<ul>\n<li>Ran Docusaurus and completed its setup and tutorial.</li>\n<li>Was able to successfully add new pages and files to the site.</li>\n<li>Research on the alternatives</li>\n</ul>\n<h2 id=\"what-we-found-out\">What we found out</h2>\n<p>Docusaurus provides a very simple, but intuitive solution to documentation. The install process is\nextremely simple thanks to Node.JS, and it is just as easy to create pages and custom content for\nthe platform.</p>\n<p>While there is still a large amount of work and research that will go into making an elegant\ntransition to the platform, the operations team believes that this is the best option. The other\noptions on the market were either too complex to get started, or were behind some form paywall.\nDocusaurus requires some knowledge of web-development, but is mostly a plug-and-play solution, with\na relatively easy flow to its tools and elements.</p>\n<h2 id=\"open-issuesrisks\">Open issues/risks</h2>\n<p>There was only one risk that was found over the course of this spike, and it is a small one at that.\nThere is very little documentation about the security of Docusaurus. However, it is a static site\ngenerator and there won’t be any data stored on it that could put Thoth tech at risk, so this is\nonly a minor concern.</p>\n<p>Presently, there are a few open tasks that need to be undertaken by the team</p>\n<ul>\n<li>Researching hosting options</li>\n<li>Completing a site map</li>\n<li>Designing the layout and content that should be on each page</li>\n<li>Converting any relevant documentation to markdown to make the transition quicker and smoother.</li>\n</ul>\n<h2 id=\"recommendations\">Recommendations</h2>\n<p>The operations team recommends that Thoth tech moves forward with storing documentation on\nDocusaurus. It is very easy to use, and allows for quick generation of pages through the markdown\nfile format. Docusaurus would also make it easier to move over current documentation as Thoth tech\nalready uses .md for most documentation. We recommend using Docusaurus’s default configuration for\nnow. If Typescript is deemed to be a better fit later down the line, we can always switch, but at\npresent the extra functionality it adds is unnecessary and would only add confusion.</p>\n<p>We recommend getting started on the move ASAP to ensure that current and future team members can\ntake advantage of a better documentation engine than relying on github alone. Assigning team members\nto converting any current documentation should be a major priority, and site maps and designs should\nalso be produced.</p>";

				const frontmatter = {"title":"Docusaurus Spike Outcome"};
				const file = "C:/Users/Danma/OneDrive/Desktop/Deakin-Work/Github Work/Capstone-Documentation-Website-Template/src/content/docs/products/company-operations/projects/docusaurus-documentation/Docusaurus Spike Outcome.md";
				const url = undefined;
				function rawContent() {
					return "\n==================\n\n**Spike:** Spike_No\n\n**Title:** Docusaurus Recommendation\n\n**Author:** Quinn Curtis, <xcurtis@deakin.edu.au>\n\n## Goals / Deliverables\n\nThe goal of this report was to determine if Docusaurus was a good option for Thoth Tech, and deliver\na spike with the answer\n\n## Technologies, Tools, and Resources used\n\n- Internet Browser (only tested with firefox and chrome)\n- NodeJS\n- Text Editor: VsCode\n- Terminal: Windows terminal\n- Programming Languages:\n  - JavaScript\n  - TypeScript\n  - React\n\n## Tasks undertaken\n\n- Ran Docusaurus and completed its setup and tutorial.\n- Was able to successfully add new pages and files to the site.\n- Research on the alternatives\n\n## What we found out\n\nDocusaurus provides a very simple, but intuitive solution to documentation. The install process is\nextremely simple thanks to Node.JS, and it is just as easy to create pages and custom content for\nthe platform.\n\nWhile there is still a large amount of work and research that will go into making an elegant\ntransition to the platform, the operations team believes that this is the best option. The other\noptions on the market were either too complex to get started, or were behind some form paywall.\nDocusaurus requires some knowledge of web-development, but is mostly a plug-and-play solution, with\na relatively easy flow to its tools and elements.\n\n## Open issues/risks\n\nThere was only one risk that was found over the course of this spike, and it is a small one at that.\nThere is very little documentation about the security of Docusaurus. However, it is a static site\ngenerator and there won't be any data stored on it that could put Thoth tech at risk, so this is\nonly a minor concern.\n\nPresently, there are a few open tasks that need to be undertaken by the team\n\n- Researching hosting options\n- Completing a site map\n- Designing the layout and content that should be on each page\n- Converting any relevant documentation to markdown to make the transition quicker and smoother.\n\n## Recommendations\n\nThe operations team recommends that Thoth tech moves forward with storing documentation on\nDocusaurus. It is very easy to use, and allows for quick generation of pages through the markdown\nfile format. Docusaurus would also make it easier to move over current documentation as Thoth tech\nalready uses .md for most documentation. We recommend using Docusaurus's default configuration for\nnow. If Typescript is deemed to be a better fit later down the line, we can always switch, but at\npresent the extra functionality it adds is unnecessary and would only add confusion.\n\nWe recommend getting started on the move ASAP to ensure that current and future team members can\ntake advantage of a better documentation engine than relying on github alone. Assigning team members\nto converting any current documentation should be a major priority, and site maps and designs should\nalso be produced.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"goals--deliverables","text":"Goals / Deliverables"},{"depth":2,"slug":"technologies-tools-and-resources-used","text":"Technologies, Tools, and Resources used"},{"depth":2,"slug":"tasks-undertaken","text":"Tasks undertaken"},{"depth":2,"slug":"what-we-found-out","text":"What we found out"},{"depth":2,"slug":"open-issuesrisks","text":"Open issues/risks"},{"depth":2,"slug":"recommendations","text":"Recommendations"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
