const id = "products/art-gallery/Projects/Lighthouse/LighthouseReviewReport.md";
						const collection = "docs";
						const slug = "products/art-gallery/projects/lighthouse/lighthousereviewreport";
						const body = "\nI have reviewed two reports on the Lighthouse scores and identified the issues that needed to be\nrectified. One report was a review on the desktop app and the other was a review on the mobile app.\nBoth had many errors so, I had to analyse both reports and did some research on finding\nrecommendations and solutions for the issue identified.\n\n## Desktop App\n\nFor the desktop app, here are the problems/recommendations I have identified from the report:\n\n- Properly size images (add explicit width & height for images)\n- Work on reducing network payloads\n- Serve static assets with efficient cache policy\n- Optimise the Largest Contentful Paint (make it faster):\n  - Eliminate resource load delay\n  - Eliminate element render delay\n  - Reduce resource load time\n  - Reduce time to first byte\n- Reduce the impact of third-party code (identify slow third-party JavaScript)\n- Reduce JavaScript execution time:\n  - Remove unused code\n  - Minify and compress code\n  - Implement code splitting\n  - Cache code with PRPL pattern\n- Minimise main thread work:\n  - Evaluate the script (debounce input handlers, use web workers)\n  - Check style layout (reduce complexity of style calculations, avoid large, complex layouts).\n  - Rendering (manage layer count, simplify paint complexity, and reduce paint areas)\n  - Parse HTML and CSS (extract critical CSS, minify CSS, defer non-critical CSS)\n- Reduce resource counts and transfer sizes (CSS & JavaScript, Images, Fonts, Documents, Media)\n- Minify JavaScript\n- Improve page loading speed:\n  - Using Preconnect to required origins\n  - Preload key requests\n- Minimise critical request depth:\n  - Minimise number of critical resources (eliminate them, defer their download, etc)\n  - Optimize the number of critical bytes and reduce the download time\n  - Optimize the order for the remaining resources to be loaded (download all critical assets early\n    to shorten critical path length)\n\n## Mobile App\n\nFor the mobile app, here are the problems/recommendations I have identified from the report:\n\n- Properly size images (add explicit width & height for images)\n- Work on reducing network payloads\n- Serve static assets with efficient cache policy\n- Optimise the Largest Contentful Paint (make it faster):\n  - Eliminate resource load delay\n  - Eliminate element render delay\n  - Reduce resource load time\n  - Reduce time to first byte\n- Improve mobile friendliness (appropriately size tap targets)\n- Reduce the impact of third-party code (identify slow third-party JavaScript)\n- Reduce JavaScript execution time:\n  - Remove unused code\n  - Minify and compress code\n  - Implement code splitting\n  - Cache code with PRPL pattern\n- Minimise main thread work:\n  - Evaluate the script (debounce input handlers, use web workers)\n  - Check style layout (reduce complexity of style calculations, avoid large, complex layouts).\n  - Rendering (manage layer count, simplify paint complexity, and reduce paint areas)\n  - Parse HTML and CSS (extract critical CSS, minify CSS, defer non-critical CSS)\n- Reduce resource counts and transfer sizes (CSS & JavaScript, Images, Fonts, Documents, Media)\n- Minify JavaScript\n- Improve page loading speed:\n  - Using Preconnect to required origins\n  - Preload key requests\n- Minimise critical request depth:\n  - Minimise number of critical resources (eliminate them, defer their download, etc)\n  - Optimize the number of critical bytes and reduce the download time\n  - Optimize the order for the remaining resources to be loaded (download all critical assets early\n    to shorten critical path length)\n- Shorten main-thread tasks\n- Check and use discernible name for links\n- Add meta description to document\n\nI have added cards and allocated story points for each of these problems and recommendations into\nthe Trello board under the ‘Lighthouse Project Implementation’ section.\n";
						const data = {title:"Review Research from T1",editUrl:true,head:[],template:"doc",sidebar:{hidden:false,attrs:{}},pagefind:true};
						const _internal = {
							type: 'content',
							filePath: "C:/Users/Danma/OneDrive/Desktop/Deakin-Work/Github Work/Capstone-Documentation-Website-Template/src/content/docs/products/art-gallery/Projects/Lighthouse/LighthouseReviewReport.md",
							rawData: "\ntitle: Review Research from T1",
						};

export { _internal, body, collection, data, id, slug };
