import { f as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro_c5329516.mjs';
import 'clsx';

const html = "<p><a href=\"#whywhat-is-quality-assurance\">Why/What is QA?</a></p>\n<p><a href=\"#software-development-and-testing\">Software Development and Testing</a></p>\n<p><a href=\"#git-contribution-guide\">Git Contribution Guide</a></p>\n<h2 id=\"whywhat-is-quality-assurance\">Why/What is Quality Assurance?</h2>\n<p>Quality Assurance (QA) is defined as a procedure to ensure the quality of software products or\nservices provided to the customers by an organisation. Quality assurance focuses on improving the\nsoftware development process and making it efficient and effective as per the quality standards\ndefined for software products.</p>\n<h2 id=\"software-development-and-testing\">Software Development and Testing</h2>\n<p>The <a href=\"testing-and-dev.md\">Testing and Development processes document</a> contains information and\nresources relating to the software conception and development process and documentation. It also\nexplains the test driven development (TDD) process and contains information relating to feature\ndevelopment using this approach. As it makes testing part of the approach, it is best to be familiar\nwith this document before you start coding.</p>\n<p>It covers key areas including:</p>\n<ul>\n<li>\n<p><a href=\"testing-and-dev.md#feature-development-where-do-i-start\">Feature development: where do I start?</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#epics-and-user-stories\">Epics and User Stories</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#software-requirements-specification-document\">Software Requirements Specification Document</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#testing-and-development\">Testing and Development</a></p>\n<ul>\n<li>\n<p><a href=\"testing-and-dev.md#test-strategy\">Test Strategy</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#making-a-test-plan\">Test Plans</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#testing-tools\">Testing Tools</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#test-driven-development\">Test Driven Development</a></p>\n</li>\n<li>\n<p><a href=\"testing-and-dev.md#testing-templates\">Testing Templates</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"git-contribution-guide\">Git Contribution Guide</h2>\n<p>The <a href=\"git-contribution-guide.md\">Git Contributions Guide</a> concerns processes relating to the git\nworkflow, branching and commit formatting guidelines and draft pull requests.</p>\n<p>Key areas are:</p>\n<ul>\n<li>\n<p><a href=\"git-contribution-guide.md#contributing-to-repositories-how-to\">Contributing to Repositories: How To</a></p>\n</li>\n<li>\n<p><a href=\"git-contribution-guide.md#branching-guidelines\">Branching Guidelines</a></p>\n</li>\n<li>\n<p><a href=\"git-contribution-guide.md#commit-guidelines\">Commit Guidelines</a></p>\n<ul>\n<li><a href=\"git-contribution-guide.md#message-format\">Commit Message Format</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"git-contribution-guide.md#code-review-guidelines\">Code Review Guidelines</a></p>\n</li>\n<li>\n<p><a href=\"git-contribution-guide.md#git-workflow-summary\">Git Workflow Summary</a></p>\n</li>\n</ul>";

				const frontmatter = {"title":"Guide to Quality Assurance Processes","sidebar":{"label":"Guide to Quality Assurance Processes"}};
				const file = "C:/Users/Danma/OneDrive/Desktop/Deakin-Work/Github Work/Capstone-Documentation-Website-Template/src/content/docs/processes/quality-assurance/quality-assurance-overview.md";
				const url = undefined;
				function rawContent() {
					return "\n[Why/What is QA?](#whywhat-is-quality-assurance)\n\n[Software Development and Testing](#software-development-and-testing)\n\n[Git Contribution Guide](#git-contribution-guide)\n\n## Why/What is Quality Assurance?\n\nQuality Assurance (QA) is defined as a procedure to ensure the quality of software products or\nservices provided to the customers by an organisation. Quality assurance focuses on improving the\nsoftware development process and making it efficient and effective as per the quality standards\ndefined for software products.\n\n## Software Development and Testing\n\nThe [Testing and Development processes document](testing-and-dev.md) contains information and\nresources relating to the software conception and development process and documentation. It also\nexplains the test driven development (TDD) process and contains information relating to feature\ndevelopment using this approach. As it makes testing part of the approach, it is best to be familiar\nwith this document before you start coding.\n\nIt covers key areas including:\n\n- [Feature development: where do I start?](testing-and-dev.md#feature-development-where-do-i-start)\n- [Epics and User Stories](testing-and-dev.md#epics-and-user-stories)\n- [Software Requirements Specification Document](testing-and-dev.md#software-requirements-specification-document)\n\n- [Testing and Development](testing-and-dev.md#testing-and-development)\n\n  - [Test Strategy](testing-and-dev.md#test-strategy)\n\n  - [Test Plans](testing-and-dev.md#making-a-test-plan)\n  - [Testing Tools](testing-and-dev.md#testing-tools)\n  - [Test Driven Development](testing-and-dev.md#test-driven-development)\n  - [Testing Templates](testing-and-dev.md#testing-templates)\n\n## Git Contribution Guide\n\nThe [Git Contributions Guide](git-contribution-guide.md) concerns processes relating to the git\nworkflow, branching and commit formatting guidelines and draft pull requests.\n\nKey areas are:\n\n- [Contributing to Repositories: How To](git-contribution-guide.md#contributing-to-repositories-how-to)\n\n- [Branching Guidelines](git-contribution-guide.md#branching-guidelines)\n\n- [Commit Guidelines](git-contribution-guide.md#commit-guidelines)\n  - [Commit Message Format](git-contribution-guide.md#message-format)\n- [Code Review Guidelines](git-contribution-guide.md#code-review-guidelines)\n\n- [Git Workflow Summary](git-contribution-guide.md#git-workflow-summary)\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"whywhat-is-quality-assurance","text":"Why/What is Quality Assurance?"},{"depth":2,"slug":"software-development-and-testing","text":"Software Development and Testing"},{"depth":2,"slug":"git-contribution-guide","text":"Git Contribution Guide"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
